package staticNormalMethods;


public class Main {

	private static int x = 20;

	public static void main(String[] args) {

		// Main driver = new Main();
		// driver.normalMethod();

		Main.staticMetot();

		Math.sqrt(4);

		int max = Main.max(1, 5, 3);
		System.out.println(max);

		double max2 = Main.max(2.0, 5.0, 3.0);
		System.out.println(max2);

//		boolean majority = Main.majority(true, false, true);
//		System.out.println(majority);
		
		int[] x = {1,2,3};
		int[] y = {1,2,3};
		System.out.println(Main.eq(x,y));


	}

	public static boolean eq(int[] x, int[] y) {
		boolean result = true;
		if (x.length == y.length) {
			for (int i = 0; i < x.length; i++) {
				if (x[i] != y[i]) {
					result=false;
					break;
				}
			}
		} else {
			result = false;
		}
		return result;
	}

	public void normalMethod() {
		System.out.println(x);
	}

	public static void staticMetot() {
		System.out.println(x);
	}

	public static int max(int x, int y, int z) {
		int max = x;
		if (y > max)
			max = y;
		if (z > max)
			max = z;
		return max;
	}

	public static double max(double x, double y, double z) {
		double max = x;
		if (y > max)
			max = y;
		if (z > max)
			max = z;
		return max;
	}

	public static boolean majority(boolean x, boolean y, boolean z) {
		return (x && y || (x && z) || (y && z));
	}
	
	public static void degistir(int x, int y) {
		int temp = x;
		x=y;
		y=temp;
		
	}

}
